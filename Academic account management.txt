1. Database Creation
a) Create the StudentInfo Table
CREATE TABLE StudentInfo (
    STU_ID INT PRIMARY KEY,
    STU_NAME VARCHAR(100),
    DOB DATE,
    PHONE_NO VARCHAR(15),
    EMAIL_ID VARCHAR(100),
    ADDRESS VARCHAR(255)
);
b) Create the CoursesInfo Table
CREATE TABLE CoursesInfo (
    COURSE_ID INT PRIMARY KEY,
    COURSE_NAME VARCHAR(100),
    COURSE_INSTRUCTOR_NAME VARCHAR(100)
);
c) Create the EnrollmentInfo Table
CREATE TABLE EnrollmentInfo (
    ENROLLMENT_ID INT PRIMARY KEY,
    STU_ID INT,
    COURSE_ID INT,
    ENROLL_STATUS VARCHAR(20),
    FOREIGN KEY (STU_ID) REFERENCES StudentInfo(STU_ID),
    FOREIGN KEY (COURSE_ID) REFERENCES CoursesInfo(COURSE_ID)
);

2. Data Insertion
Insert Sample Data into StudentInfo
INSERT INTO StudentInfo (STU_ID, STU_NAME, DOB, PHONE_NO, EMAIL_ID, ADDRESS)
VALUES
(1, 'John Doe', '2000-01-01', '123-456-7890', 'john.doe@example.com', '123 Main St'),
(2, 'Jane Smith', '1999-05-15', '987-654-3210', 'jane.smith@example.com', '456 Elm St');
Insert Sample Data into CoursesInfo
INSERT INTO CoursesInfo (COURSE_ID, COURSE_NAME, COURSE_INSTRUCTOR_NAME)
VALUES
(101, 'Mathematics', 'Dr. Alan Turing'),
(102, 'Physics', 'Dr. Albert Einstein');
Insert Sample Data into EnrollmentInfo
INSERT INTO EnrollmentInfo (ENROLLMENT_ID, STU_ID, COURSE_ID, ENROLL_STATUS)
VALUES
(1, 1, 101, 'Enrolled'),
(2, 2, 102, 'Enrolled'),
(3, 1, 102, 'Not Enrolled');


3. Retrieve Student Information
a) Retrieve Student Details
SELECT STU_NAME, PHONE_NO, EMAIL_ID, ENROLL_STATUS
FROM StudentInfo
JOIN EnrollmentInfo ON StudentInfo.STU_ID = EnrollmentInfo.STU_ID;
b) Retrieve Courses for a Specific Student
SELECT COURSE_NAME
FROM CoursesInfo
JOIN EnrollmentInfo ON CoursesInfo.COURSE_ID = EnrollmentInfo.COURSE_ID
WHERE ENROLL_STATUS = 'Enrolled' AND STU_ID = 1;  -- Replace 1 with the specific STU_ID
c) Retrieve Course Information (Name, Instructor)
SELECT COURSE_NAME, COURSE_INSTRUCTOR_NAME
FROM CoursesInfo;
d) Retrieve Information for a Specific Course
SELECT COURSE_NAME, COURSE_INSTRUCTOR_NAME
FROM CoursesInfo
WHERE COURSE_ID = 101;  -- Replace 101 with the specific COURSE_ID
e) Retrieve Information for Multiple Courses
SELECT COURSE_NAME, COURSE_INSTRUCTOR_NAME
FROM CoursesInfo
WHERE COURSE_ID IN (101, 102);  -- Replace with the specific COURSE_IDs


4. Reporting and Analytics
a) Number of Students Enrolled in Each Course
SELECT COURSE_NAME, COUNT(STU_ID) AS Student_Count
FROM CoursesInfo
JOIN EnrollmentInfo ON CoursesInfo.COURSE_ID = EnrollmentInfo.COURSE_ID
WHERE ENROLL_STATUS = 'Enrolled'
GROUP BY COURSE_NAME;
b) List of Students Enrolled in a Specific Course
SELECT STU_NAME
FROM StudentInfo
JOIN EnrollmentInfo ON StudentInfo.STU_ID = EnrollmentInfo.STU_ID
WHERE ENROLL_STATUS = 'Enrolled' AND COURSE_ID = 101;  -- Replace with specific COURSE_ID
c) Count of Enrolled Students for Each Instructor
SELECT COURSE_INSTRUCTOR_NAME, COUNT(STU_ID) AS Student_Count
FROM CoursesInfo
JOIN EnrollmentInfo ON CoursesInfo.COURSE_ID = EnrollmentInfo.COURSE_ID
WHERE ENROLL_STATUS = 'Enrolled'
GROUP BY COURSE_INSTRUCTOR_NAME;
d) List of Students Enrolled in Multiple Courses
SELECT STU_NAME
FROM StudentInfo
JOIN EnrollmentInfo ON StudentInfo.STU_ID = EnrollmentInfo.STU_ID
WHERE ENROLL_STATUS = 'Enrolled'
GROUP BY STU_NAME
HAVING COUNT(COURSE_ID) > 1;
e) Courses with the Highest Number of Enrolled Students
SELECT COURSE_NAME, COUNT(STU_ID) AS Student_Count
FROM CoursesInfo
JOIN EnrollmentInfo ON CoursesInfo.COURSE_ID = EnrollmentInfo.COURSE_ID
WHERE ENROLL_STATUS = 'Enrolled'
GROUP BY COURSE_NAME
ORDER BY Student_Count DESC;
